{"version":3,"sources":["01-Users/Users.module.css","04-Modal/Modal/Modal.module.css","03-Button/SuperButton.module.css","02-Search/Search.module.css","App.module.css","00-api/Api.tsx","00-bll/user-reducer.tsx","04-Modal/Modal/Modal.tsx","01-Users/Users.tsx","00-bll/selectors.ts","03-Button/Button.tsx","05-Input/Input.tsx","02-Search/Search.tsx","App.tsx","reportWebVitals.ts","00-bll/store.ts","index.tsx","05-Input/Input.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","headers","Accept","usersAPI","get","then","res","initializeState","deleteUser","id","type","getUsersListTC","dispatch","a","users","data","console","log","Modal","isShown","height","width","showBackground","closeModalWindow","scrollUp","top","left","position","children","className","style","modal","onClick","overlay","Users","props","useState","setIsShown","useDispatch","useCallback","error","s","packItem","name","username","email","modalContainer","address","city","street","suite","geo","lat","lng","company","bs","catchPhrase","selectorUserList","state","Button","red","restProps","finalClassName","buttonStyle","default","Input","React","memo","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalInputClassName","input","superInput","finalSpanClassName","spanError","e","currentTarget","value","key","Search","setValue","usersArr","useSelector","showAll","search_input","placeholder","text","us","filter","el","includes","toLowerCase","filterUsers","findUsers","App","useEffect","mappedUsers","map","user","index","container","tableContainer","tableHeaders","tableBody","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","u","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bf9936d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2A0BY\",\"filtersContainer\":\"Users_filtersContainer__1A80i\",\"packItem\":\"Users_packItem__s6aa1\",\"address\":\"Users_address__3d5IP\",\"modalContainer\":\"Users_modalContainer__2krin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__OnjT-\",\"overlay\":\"Modal_overlay__W7309\",\"children\":\"Modal_children__85HGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"SuperButton_buttonStyle__1angR\",\"default\":\"SuperButton_default__3-cZw\",\"red\":\"SuperButton_red__2W6TM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__ZpcsR\",\"search_input\":\"Search_search_input__3unr3\",\"search_btn_wrapper\":\"Search_search_btn_wrapper__1UE8J\",\"search_btn\":\"Search_search_btn__3rly5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2FX7o\",\"tableContainer\":\"App_tableContainer__qf0ZL\",\"tableHeaders\":\"App_tableHeaders__1JWIo\",\"tableBody\":\"App_tableBody__3FDHB\"};","import axios from 'axios'\r\nimport {UsersType} from \"../App\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/',\r\n    withCredentials: true,\r\n    headers: {\r\n        Accept: 'application/json',\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    fetchUsers() {\r\n        return instance.get<UsersType[]>(`users`)\r\n            .then(res => res)\r\n    }\r\n}\r\n","import {UsersType} from \"../App\";\r\nimport {usersAPI} from \"../00-api/Api\";\r\nimport {AppStateType} from \"./store\";\r\nimport {ThunkDispatch} from 'redux-thunk';\r\n\r\nexport type UsersActionsType = ReturnType<typeof setUsers> |\r\n    ReturnType<typeof deleteUser> | ReturnType<typeof filterUsers>\r\n\r\nconst initializeState: UsersType[] = []\r\ntype InitialStateType = typeof initializeState\r\n\r\nexport const userReducer = (state: InitialStateType = initializeState, action: UsersActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USERS': {\r\n            return [...action.users]\r\n        }\r\n        case \"DELETE_USER\": {\r\n            return state.filter(u => u.id !== action.id)\r\n        }\r\n        case \"FILTER_USER\": {\r\n            return [...action.value]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setUsers = (users: UsersType[]) => ({\r\n    type: \"SET_USERS\", users\r\n} as const)\r\nexport const deleteUser = (id: string) => ({\r\n    type: \"DELETE_USER\", id\r\n} as const)\r\nexport const filterUsers = (value: UsersType[]) => ({\r\n    type: \"FILTER_USER\", value\r\n} as const)\r\n\r\nexport const getUsersListTC = () => async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n    try {\r\n        const res = await usersAPI.fetchUsers()\r\n        dispatch(setUsers(res.data));\r\n    } catch (error) {\r\n        console.log('Error')\r\n    }\r\n}\r\n\r\nexport const deleteUserTC = (id: string) => async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n    try {\r\n        dispatch(deleteUser(id))\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from './Modal.module.css';\r\nimport {UsersType} from \"../../App\";\r\n\r\ntype ModalPropsType = {\r\n    closeModalWindow?: () => void\r\n    isShown: boolean\r\n    scrollUp?: () => void\r\n    showBackground: boolean\r\n    width: number\r\n    height: number\r\n    top: number\r\n    left: number\r\n    position: \"static\" | \"relative\" | \"absolute\" | \"sticky\" | \"fixed\",\r\n};\r\n\r\nconst Modal: React.FC<ModalPropsType> = (\r\n    {\r\n        isShown,\r\n        height,\r\n        width,\r\n        showBackground,\r\n        closeModalWindow,\r\n        scrollUp, top, left, position,\r\n        children\r\n    }) => {\r\n\r\n    return (\r\n        <div>\r\n            {isShown && <div className={style.modal}\r\n                             style={{width, height, position, top: `${top}%`, left: `${left}%`}}>\r\n                <div className={style.children} onClick={scrollUp}>{children}</div>\r\n            </div>}\r\n\r\n            {isShown && showBackground &&\r\n            <div className={style.overlay} onClick={closeModalWindow}></div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {UsersType} from \"../App\";\r\nimport s from './Users.module.css';\r\nimport Button from \"../03-Button/Button\";\r\nimport {deleteUserTC} from \"../00-bll/user-reducer\";\r\nimport Modal from \"../04-Modal/Modal/Modal\";\r\n\r\ntype PropsType = {\r\n    users: UsersType\r\n}\r\nexport const Users = (props: PropsType) => {\r\n    const [isShown, setIsShown] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteUser = useCallback(() => {\r\n        dispatch(deleteUserTC(props.users.id))\r\n    }, [props.users.id])\r\n\r\n    const closeModalWindow = () => {\r\n        setIsShown(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr className={s.packItem} onClick={() => {\r\n                setIsShown(true)\r\n            }}>\r\n                <td>{props.users.name}</td>\r\n                <td>{props.users.username}</td>\r\n                <td>{props.users.email}</td>\r\n                <td>\r\n                    <button onClick={deleteUser}>X</button>\r\n                </td>\r\n\r\n            </tr>\r\n            < Modal closeModalWindow={closeModalWindow}\r\n                    isShown={isShown}\r\n                    showBackground={true}\r\n                    width={600}\r\n                    height={400}\r\n                    top={50}\r\n                    left={50}\r\n                    position={\"absolute\"}\r\n            >\r\n                <div className={s.modalContainer}>\r\n                    <div className={s.address}>\r\n                        <div><b>Address:</b>{props.users.address.city},{props.users.address.street},\r\n                            {props.users.address.suite};\r\n                        </div>\r\n                        <div>{props.users.address.geo.lat},{props.users.address.geo.lng};</div>\r\n                    </div>\r\n                    <div>\r\n                        <b>Company:</b>{props.users.company.name}\r\n                        <div>{props.users.company.bs}</div>\r\n                        <div>{props.users.company.catchPhrase}</div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import {AppStateType} from \"./store\";\r\n\r\nexport const selectorUserList = (state: AppStateType) => state.users\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${s.buttonStyle} ${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}/>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\nimport s from './Input.module.css';\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype InputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nexport const Input: React.FC<InputTextPropsType> = React.memo((\n    {\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e)\n        e.key === 'Enter'\n        && onEnter\n        && onEnter()\n    }\n\n    const finalInputClassName = className ? `${s.input} ${className}` : s.superInput\n    const finalSpanClassName = spanClassName ? `${s.error} ${spanClassName}` : s.spanError\n\n    return (\n        <>\n            <input type={'text'}\n                   onChange={onChangeCallback}\n                   onKeyPress={onKeyPressCallback}\n                   className={finalInputClassName}\n                   {...restProps}\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n})\n\n","import React, {useCallback, useState} from 'react';\r\nimport Button from \"../03-Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filterUsers, getUsersListTC, setUsers} from \"../00-bll/user-reducer\";\r\nimport {Input} from \"../05-Input/Input\";\r\nimport s from './Search.module.css';\r\nimport {selectorUserList} from \"../00-bll/selectors\";\r\n\r\ntype SearchPropsType = {\r\n\r\n}\r\n\r\nexport const Search = (props: SearchPropsType) => {\r\n    const [value, setValue] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const usersArr = useSelector(selectorUserList)\r\n\r\n    const findUsers = (text: string) => {\r\n        debugger\r\n        console.log(text)\r\n        if(!value){\r\n            return usersArr\r\n        }\r\n        const us = usersArr.filter(el => {\r\n                return (el['name'].includes(value.toLowerCase())\r\n                || el['username'].includes(value.toLowerCase())\r\n                || el['email'].includes(value.toLowerCase()))\r\n            }\r\n        )\r\n        dispatch(filterUsers(us))\r\n        setValue('')\r\n    }\r\n    const showAll = useCallback(() => {\r\n        dispatch(getUsersListTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Input className={s.search_input}\r\n                   value={value}\r\n                   placeholder='Search...'\r\n                   onChange={inputHandler}\r\n            />\r\n            <Button onClick={() => {\r\n                findUsers(value)\r\n            }}>FILTER</Button>\r\n            <Button onClick={showAll}>RESET</Button>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.module.css';\nimport {Users} from \"./01-Users/Users\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {filterUsers, getUsersListTC} from \"./00-bll/user-reducer\";\nimport {selectorUserList} from \"./00-bll/selectors\";\nimport s from './App.module.css';\nimport {Search} from \"./02-Search/Search\";\n\n\ntype GeoType = {\n    lat: string,\n    lng: string\n}\n\ntype AddressType = {\n    street: string,\n    suite: string,\n    city: string,\n    zipcode: string,\n    geo: GeoType\n}\ntype CompanyType = {\n    name: string,\n    catchPhrase: string,\n    bs: string\n}\nexport type UsersType = {\n    id: string,\n    name: string,\n    username: string,\n    email: string,\n    address: AddressType,\n    phone: string,\n    website: string,\n    company: CompanyType\n}\n\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getUsersListTC())\n    }, [])\n\n    const usersArr = useSelector(selectorUserList)\n\n\n    const mappedUsers = useCallback(() => {\n        return usersArr && usersArr.map((user, index) => {\n            return <Users key={user.id}\n                          users={user}\n            />\n        })\n    }, [usersArr])\n\n    return (\n        <div className={s.container}>\n\n            <Search />\n\n            <table className={s.tableContainer}>\n                <thead className={s.tableHeaders}>\n                <tr>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th></th>\n                </tr>\n                </thead>\n                <tbody className={s.tableBody}>\n                {\n                    mappedUsers()\n                }\n                </tbody>\n            </table>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers,applyMiddleware, createStore} from 'redux';\r\nimport {userReducer} from \"./user-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    users: userReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./00-bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2uTcG\"};"],"sourceRoot":""}